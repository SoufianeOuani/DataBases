ðŸ“Œ Creating and Managing Users in MySQL
MySQL allows administrators to create and manage users with different levels of access to the database. Proper user management enhances security and ensures that only authorized users can access or modify data.

âœ… Creating a New User
By default, MySQL uses authentication and privileges to control user access.
 _________________________________________________________________________
|  CREATE USER 'john_doe'@'localhost' IDENTIFIED BY 'securepassword';     |
|_________________________________________________________________________|
ðŸ”¹ 'john_doe' is the username
ðŸ”¹ 'localhost' means the user can connect only from the local machine
ðŸ”¹ 'securepassword' is the userâ€™s password

âœ… Viewing All Users
To see existing users:
 ________________________________________________________________________________________
|  SELECT user, host FROM mysql.user;                                                    |
|________________________________________________________________________________________|


âœ… Changing a User's Password
 ________________________________________________________________________________________
|  ALTER USER 'john_doe'@'localhost' IDENTIFIED BY 'newpassword';                        |
|________________________________________________________________________________________|
Or for older MySQL versions:
 ________________________________________________________________________________________
|  SET PASSWORD FOR 'john_doe'@'localhost' = PASSWORD('newpassword');                    |
|________________________________________________________________________________________|


âœ… Deleting a User
 ________________________________________________________________________________________
|  DROP USER 'john_doe'@'localhost';                                                     |
|________________________________________________________________________________________|
ðŸ”¹ This removes the user from the MySQL system.

ðŸ“Œ Granting Permissions Using GRANT and REVOKE
Permissions define what actions a user can perform on a database.

âœ… Granting Full Access to a Database
 _______________________________________________________________________________________
|  GRANT ALL PRIVILEGES ON my_database.* TO 'john_doe'@'localhost';                     |   
|_______________________________________________________________________________________|
ðŸ”¹ This gives full access to my_database.

âœ… Granting Specific Permissions
 ________________________________________________________________________________________
|  GRANT SELECT, INSERT, UPDATE ON my_database.* TO 'john_doe'@'localhost';              |    
|________________________________________________________________________________________|
ðŸ”¹ The user can only read, insert, and update data but cannot delete it.

âœ… Granting Table-Specific Permissions
 ________________________________________________________________________________________
|  GRANT SELECT ON my_database.customers TO 'john_doe'@'localhost';                      |
|________________________________________________________________________________________|
ðŸ”¹ The user can only read data from the customers table.

âœ… Revoking Permissions
To remove specific permissions:
 ________________________________________________________________________________________
|  REVOKE INSERT, UPDATE ON my_database.* FROM 'john_doe'@'localhost';                   | 
|________________________________________________________________________________________|
ðŸ”¹ The user can no longer insert or update data but can still read it.

To remove all permissions:
 ________________________________________________________________________________________
|  REVOKE ALL PRIVILEGES ON my_database.* FROM 'john_doe'@'localhost';                   | 
|________________________________________________________________________________________|


âœ… Applying Permission Changes
 ________________________________________________________________________________________
|  FLUSH PRIVILEGES;                                                                       | 
|________________________________________________________________________________________|
ðŸ”¹ This ensures all changes take effect immediately.

ðŸ“Œ Database Security Through Access Control
âœ… Best Practices for Secure User Management
ðŸ”¹ Use Strong Passwords â€“ Avoid simple passwords like "123456".
ðŸ”¹ Limit Privileges â€“ Only give users the permissions they need.
ðŸ”¹ Use GRANT USAGE for Read-Only Users

 ________________________________________________________________________________________
|  GRANT USAGE ON my_database.* TO 'readonly_user'@'localhost';                          |  
|________________________________________________________________________________________|
ðŸ”¹ Restrict Remote Access â€“ Allow only localhost access unless necessary.
ðŸ”¹ Regularly Audit User Privileges â€“ Check with:

 ________________________________________________________________________________________
|  SHOW GRANTS FOR 'john_doe'@'localhost';                                               | 
|________________________________________________________________________________________|
ðŸ”¹ Use Encrypted Connections (SSL) for remote database access.
